{"version":3,"sources":["components/Item/Item.styles.ts","components/Item/Item.tsx","components/CartItem/CartItem.styles.ts","components/CartItem/CartItem.tsx","components/Cart/Cart.styles.ts","components/Cart/Cart.tsx","app.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","CartItem","addToCart","removeFromCart","className","amount","toFixed","size","disableElevation","variant","id","aside","Cart","items","cartItems","length","map","reduce","ack","StyledButton","IconButton","getProduct","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartitems","useQuery","data","isLoading","error","console","log","clickedItem","prev","find","LinearProgress","Drawer","anchor","open","onClose","Badge","badgeContent","color","Grid","container","spacing","xs","sm","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.fd8dff3e.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\ndisplay: flex;\njustify-content: space-between;\nflex-direction: column;\nwidth: 100%;\nborder: 1px solid lightblue;\nborder-radius: 20px;\nheight: 100%;\n\nbutton { \n    border-radius: 0 0 20px 20px; \n}\n\nimg {\n    max-height: 250px;\n    object-fit: cover;\n    border-radius; 20px 20px 0 0;\n}\n\ndiv{\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 1rem;\n    height: 100%;\n}\n`;","import Button from '@material-ui/core/Button';\n\n//types';\nimport { CartItemType } from '../../App'\n\n//styles \nimport { Wrapper } from './Item.styles';\n\ntype Props = {\n    item: CartItemType\n    handleAddToCart: (clickedItem: CartItemType) => void;\n}\n\nconst Item: React.FC<Props> = ({ item, handleAddToCart }) => (\n    <Wrapper>\n        <img src={item.image} alt={item.title} />\n        <div>\n            <h3>{item.title}</h3>\n            <p>{item.description}</p>\n            <h3>${item.price}</h3>\n        </div>\n        <Button onClick={() => handleAddToCart(item)}>Add To Cart</Button>\n    </Wrapper>\n);\n\nexport default Item;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\ndisplay: flex;\njustifyContent: space-between;\nfont-family: Arial, Helvetica, sans-serif;\nborder-bottom: 1px solid lightblue;\npadding-bottom: 20px;\n\ndiv { \n    flex: 1;\n}\n\n.information, .buttons {\n    display: flex;\n    justify-content: space-between;\n}\n\nimg {\n    max-width: 80px;\n    object-fit: cover;\n    margin-left: 40px;\n}\n`","import Button from \"@material-ui/core/Button\";\nimport { CartItemType } from \"../../App\";\n\n//styles for\nimport { Wrapper } from \"./CartItem.styles\";\n\ntype Props = {\n    item: CartItemType;\n    addToCart: (clickedItem: CartItemType) => void;\n    removeFromCart: (id: number) => void\n}\n\nconst CartItem: React.FC<Props> = ({ item, addToCart, removeFromCart}) => (\n<Wrapper>\n<div>\n    <h3>\n        {item.title}\n    </h3>\n    <div className=\"information\">\n    <p>Price: ${item.price}</p>\n    <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\n    </div>\n    <div className=\"buttons\">\n        <Button size=\"small\" disableElevation variant=\"contained\" onClick={() => removeFromCart(item.id)}>\n            -\n        </Button>\n\n        <p>{item.amount}</p>\n        <Button size=\"small\" disableElevation variant=\"contained\" onClick={() => addToCart(item)}>\n            +\n        </Button>\n    </div>\n</div>\n<img src ={item.image} alt={item.title} />\n</Wrapper>\n)\n\nexport default CartItem;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.aside`\nfont-family: Arial, Helvetica, sans-serif;\nwidth: 500px;\npadding 20px;\n`","import CartItem from \"../CartItem/CartItem\"\nimport { Wrapper } from './Cart.styles';\nimport { CartItemType } from '../../App';\n\ntype Props = {\n    cartItems: CartItemType[];\n    addToCart: (clickedItem: CartItemType) => void;\n    removeFromCart: (id:number) => void;\n}\n\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart}) => {\n    const calculateTotal = (items: CartItemType[]) =>\n    items.reduce((ack: number, item) => ack + item.amount * item.price, 0)\n\n    return (\n        <Wrapper>\n            <h2>Your Shopping Cart</h2>\n            {cartItems.length === 0 ? <p>No Items in Cart</p> : null}\n\n            {cartItems.map(item => (\n                <CartItem \n                key={item.id}\n                item={item}\n                addToCart={addToCart}\n                removeFromCart={removeFromCart}\n                />\n                ))}\n                <h2>\n                    Total: ${calculateTotal(cartItems).toFixed(2)}\n                </h2>\n        </Wrapper>\n    )\n}\n\nexport default Cart;\n\n","import styled from 'styled-components';\nimport IconButton from '@material-ui/core/IconButton'\n\nexport const Wrapper = styled.div`\n    margin: 40px;\n`\n\nexport const StyledButton = styled(IconButton)`\nposition: fixed;\nz-index: 100;\nright: 20px;\ntop:20px;\n\n`","import { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart'\nimport Badge from '@material-ui/core/Badge';\nimport Item from './components/Item/Item'\nimport Cart from './components/Cart/Cart'\n\n//_styles\nimport { Wrapper, StyledButton } from './app.styles'\n\n//types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  // added amount, not coming from API\n  amount: number;\n\n};\n\nconst getProduct = async (): Promise<CartItemType[]> => \n  await (await fetch('https://fakestoreapi.com/products')).json();\n\n\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartitems] = useState([] as CartItemType[]);\n\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products',\n    getProduct\n    );\n\n    console.log(data)\n\n    const getTotalItems = (items: CartItemType[]) => \n    items.reduce((ack: number, item) => ack + item.amount, 0)\n\n    const handleAddToCart = (clickedItem: CartItemType) => {\n      setCartitems(prev => {\n        const isItemInCart = prev.find(item => item.id === clickedItem.id);\n\n        if(isItemInCart) {\n          return prev.map(item => (\n            item.id === clickedItem.id ? {...item, amount: item.amount + 1} : item\n          ))\n        }\n\n        return [...prev, { ...clickedItem, amount: 1}] \n      })\n    }\n\n    const handleRemoveFromCart = (id: number) => {\n      setCartitems(prev => \n        prev.reduce((ack, item) => {\n          if(item.id === id){\n            if(item.amount === 1) return ack;\n\n            return [...ack, { ...item, amount: item.amount - 1}];\n          } else {\n            return [...ack, item]\n          }\n        }, [] as CartItemType[])\n      )\n    }\n\n    if (isLoading) return <LinearProgress />;\n\n    if (error) return <> Something went Wrong....</>;\n\n\n\n  return (\n    <Wrapper>\n      <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Cart cartItems={cartItems} addToCart={handleAddToCart} removeFromCart={handleRemoveFromCart} />\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color='error'>\n      <AddShoppingCartIcon/>\n\n        </Badge>\n        </StyledButton>\\\n      <Grid container spacing={3}>\n        {/* ? will return undefined if there is no data  */}\n    {data?.map(item => (\n      <Grid item key={item.id} xs={12} sm={4}>\n        <Item item={item} handleAddToCart={handleAddToCart} />\n      </Grid>\n    ))}\n      </Grid>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query'\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client ={client}>\n  <App />\n  </QueryClientProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}